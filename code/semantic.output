Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID
    8          | parameter _COMMA _TYPE _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: pocetak_var _SEMICOLON
   13         | pocetak_var _ASSIGN num_exp _SEMICOLON

   14 $@2: %empty

   15 pocetak_var: _TYPE $@2 vars

   16 vars: _ID
   17     | vars _COMMA _ID

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | assignment_statement
   22          | if_statement
   23          | postinc_statement
   24          | return_statement
   25          | para_statement
   26          | jiro_statement

   27 $@3: %empty

   28 $@4: %empty

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

   30 break_exp: %empty
   31          | _BREAK _SEMICOLON

   32 $@5: %empty

   33 tranga_exp: _TRANGA jiro_literal $@5 _COLON statement break_exp
   34           | tranga_exp _TRANGA jiro_literal _COLON statement break_exp

   35 jiro_literal: _INT_NUMBER
   36             | _UINT_NUMBER

   37 toerana_exp: %empty
   38            | _TOERANA _COLON statement

   39 $@6: %empty

   40 $@7: %empty

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

   42 postinc_statement: _ID _POSTINC _SEMICOLON

   43 compound_statement: _LBRACKET statement_list _RBRACKET

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   45 num_exp: exp
   46        | num_exp _AROP exp

   47 exp: literal
   48    | _ID
   49    | function_call
   50    | _ID _POSTINC
   51    | function_call _POSTINC
   52    | _LPAREN num_exp _RPAREN

   53 literal: _INT_NUMBER
   54        | _UINT_NUMBER

   55 $@8: %empty

   56 function_call: _ID $@8 _LPAREN argument _RPAREN

   57 argument: %empty
   58         | num_exp
   59         | argument _COMMA num_exp

   60 if_statement: if_part
   61             | if_part _ELSE statement

   62 if_part: _IF _LPAREN rel_exp _RPAREN statement

   63 rel_exp: num_exp _RELOP num_exp

   64 return_statement: _RETURN num_exp _SEMICOLON
   65                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 8 15 41
_IF (259) 62
_ELSE (260) 61
_RETURN (261) 64 65
_ID (262) 5 7 8 16 17 29 41 42 44 48 50 56
_INT_NUMBER (263) 35 53
_UINT_NUMBER (264) 36 54
_LPAREN (265) 5 29 41 52 56 62
_RPAREN (266) 5 29 41 52 56 62
_LBRACKET (267) 9 29 43
_RBRACKET (268) 9 29 43
_ASSIGN (269) 13 44
_SEMICOLON (270) 12 13 31 41 42 44 64 65
_AROP (271) 46
_RELOP (272) 63
_COMMA (273) 8 17 59
_POSTINC (274) 42 50 51
_PARA (275) 41
_PASO (276) 41
_JIRO (277) 29
_TRANGA (278) 33 34
_TOERANA (279) 38
_COLON (280) 33 34 38
_BREAK (281) 31
ONLY_IF (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
function_list (30)
    on left: 2 3, on right: 1 3
function (31)
    on left: 5, on right: 2 3
$@1 (32)
    on left: 4, on right: 5
parameter (33)
    on left: 6 7 8, on right: 5 8
body (34)
    on left: 9, on right: 5
variable_list (35)
    on left: 10 11, on right: 9 11
variable (36)
    on left: 12 13, on right: 11
pocetak_var (37)
    on left: 15, on right: 12 13
$@2 (38)
    on left: 14, on right: 15
vars (39)
    on left: 16 17, on right: 15 17
statement_list (40)
    on left: 18 19, on right: 9 19 43
statement (41)
    on left: 20 21 22 23 24 25 26, on right: 19 33 34 38 41 61 62
jiro_statement (42)
    on left: 29, on right: 26
$@3 (43)
    on left: 27, on right: 29
$@4 (44)
    on left: 28, on right: 29
break_exp (45)
    on left: 30 31, on right: 33 34
tranga_exp (46)
    on left: 33 34, on right: 29 34
$@5 (47)
    on left: 32, on right: 33
jiro_literal (48)
    on left: 35 36, on right: 33 34
toerana_exp (49)
    on left: 37 38, on right: 29
para_statement (50)
    on left: 41, on right: 25
$@6 (51)
    on left: 39, on right: 41
$@7 (52)
    on left: 40, on right: 41
postinc_statement (53)
    on left: 42, on right: 23
compound_statement (54)
    on left: 43, on right: 20
assignment_statement (55)
    on left: 44, on right: 21
num_exp (56)
    on left: 45 46, on right: 13 44 46 52 58 59 63 64
exp (57)
    on left: 47 48 49 50 51 52, on right: 45 46
literal (58)
    on left: 53 54, on right: 41 47
function_call (59)
    on left: 56, on right: 49 51
$@8 (60)
    on left: 55, on right: 56
argument (61)
    on left: 57 58 59, on right: 56 59
if_statement (62)
    on left: 60 61, on right: 22
if_part (63)
    on left: 62, on right: 60 61
rel_exp (64)
    on left: 63, on right: 41 62
return_statement (65)
    on left: 64 65, on right: 24


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body
    8 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 13
    _COMMA   shift, and go to state 14


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 14

    8 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 17


State 15

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 18


State 16

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 17

    8 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 19


State 18

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 20

    $default  reduce using rule 18 (statement_list)

    variable        go to state 21
    pocetak_var     go to state 22
    statement_list  go to state 23


State 19

    8 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 20

   15 pocetak_var: _TYPE . $@2 vars

    $default  reduce using rule 14 ($@2)

    $@2  go to state 24


State 21

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 22

   12 variable: pocetak_var . _SEMICOLON
   13         | pocetak_var . _ASSIGN num_exp _SEMICOLON

    _ASSIGN     shift, and go to state 25
    _SEMICOLON  shift, and go to state 26


State 23

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 34
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 24

   15 pocetak_var: _TYPE $@2 . vars

    _ID  shift, and go to state 43

    vars  go to state 44


State 25

   13 variable: pocetak_var _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 49
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 26

   12 variable: pocetak_var _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 27

   62 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 53


State 28

   64 return_statement: _RETURN . num_exp _SEMICOLON
   65                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _SEMICOLON    shift, and go to state 54

    num_exp        go to state 55
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 29

   42 postinc_statement: _ID . _POSTINC _SEMICOLON
   44 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN   shift, and go to state 56
    _POSTINC  shift, and go to state 57


State 30

   43 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 58


State 31

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 32

   41 para_statement: _PARA . _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    _LPAREN  shift, and go to state 59


State 33

   29 jiro_statement: _JIRO . $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

    $default  reduce using rule 27 ($@3)

    $@3  go to state 60


State 34

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 35

   26 statement: jiro_statement .

    $default  reduce using rule 26 (statement)


State 36

   25 statement: para_statement .

    $default  reduce using rule 25 (statement)


State 37

   23 statement: postinc_statement .

    $default  reduce using rule 23 (statement)


State 38

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 39

   21 statement: assignment_statement .

    $default  reduce using rule 21 (statement)


State 40

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 41

   60 if_statement: if_part .
   61             | if_part . _ELSE statement

    _ELSE  shift, and go to state 61

    $default  reduce using rule 60 (if_statement)


State 42

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 43

   16 vars: _ID .

    $default  reduce using rule 16 (vars)


State 44

   15 pocetak_var: _TYPE $@2 vars .
   17 vars: vars . _COMMA _ID

    _COMMA  shift, and go to state 62

    $default  reduce using rule 15 (pocetak_var)


State 45

   48 exp: _ID .
   50    | _ID . _POSTINC
   56 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _POSTINC  shift, and go to state 63

    _LPAREN   reduce using rule 55 ($@8)
    $default  reduce using rule 48 (exp)

    $@8  go to state 64


State 46

   53 literal: _INT_NUMBER .

    $default  reduce using rule 53 (literal)


State 47

   54 literal: _UINT_NUMBER .

    $default  reduce using rule 54 (literal)


State 48

   52 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 65
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 49

   13 variable: pocetak_var _ASSIGN num_exp . _SEMICOLON
   46 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 67


State 50

   45 num_exp: exp .

    $default  reduce using rule 45 (num_exp)


State 51

   47 exp: literal .

    $default  reduce using rule 47 (exp)


State 52

   49 exp: function_call .
   51    | function_call . _POSTINC

    _POSTINC  shift, and go to state 68

    $default  reduce using rule 49 (exp)


State 53

   62 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 69
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52
    rel_exp        go to state 70


State 54

   65 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 65 (return_statement)


State 55

   46 num_exp: num_exp . _AROP exp
   64 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 71
    _AROP       shift, and go to state 67


State 56

   44 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 72
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 57

   42 postinc_statement: _ID _POSTINC . _SEMICOLON

    _SEMICOLON  shift, and go to state 73


State 58

   19 statement_list: statement_list . statement
   43 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 74
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 34
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 59

   41 para_statement: _PARA _LPAREN . _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    _TYPE  shift, and go to state 75


State 60

   29 jiro_statement: _JIRO $@3 . _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

    _LPAREN  shift, and go to state 76


State 61

   61 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 77
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 62

   17 vars: vars _COMMA . _ID

    _ID  shift, and go to state 78


State 63

   50 exp: _ID _POSTINC .

    $default  reduce using rule 50 (exp)


State 64

   56 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 79


State 65

   46 num_exp: num_exp . _AROP exp
   52 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 67


State 66

   13 variable: pocetak_var _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 67

   46 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    exp            go to state 81
    literal        go to state 51
    function_call  go to state 52


State 68

   51 exp: function_call _POSTINC .

    $default  reduce using rule 51 (exp)


State 69

   46 num_exp: num_exp . _AROP exp
   63 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 67
    _RELOP  shift, and go to state 82


State 70

   62 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 83


State 71

   64 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 64 (return_statement)


State 72

   44 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   46 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 84
    _AROP       shift, and go to state 67


State 73

   42 postinc_statement: _ID _POSTINC _SEMICOLON .

    $default  reduce using rule 42 (postinc_statement)


State 74

   43 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 43 (compound_statement)


State 75

   41 para_statement: _PARA _LPAREN _TYPE . _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    _ID  shift, and go to state 85


State 76

   29 jiro_statement: _JIRO $@3 _LPAREN . _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

    _ID  shift, and go to state 86


State 77

   61 if_statement: if_part _ELSE statement .

    $default  reduce using rule 61 (if_statement)


State 78

   17 vars: vars _COMMA _ID .

    $default  reduce using rule 17 (vars)


State 79

   56 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    $default  reduce using rule 57 (argument)

    num_exp        go to state 87
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52
    argument       go to state 88


State 80

   52 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 52 (exp)


State 81

   46 num_exp: num_exp _AROP exp .

    $default  reduce using rule 46 (num_exp)


State 82

   63 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 89
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 83

   62 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 90
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 84

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 44 (assignment_statement)


State 85

   41 para_statement: _PARA _LPAREN _TYPE _ID . $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    $default  reduce using rule 39 ($@6)

    $@6  go to state 91


State 86

   29 jiro_statement: _JIRO $@3 _LPAREN _ID . $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

    $default  reduce using rule 28 ($@4)

    $@4  go to state 92


State 87

   46 num_exp: num_exp . _AROP exp
   58 argument: num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 58 (argument)


State 88

   56 function_call: _ID $@8 _LPAREN argument . _RPAREN
   59 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 93
    _COMMA   shift, and go to state 94


State 89

   46 num_exp: num_exp . _AROP exp
   63 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 63 (rel_exp)


State 90

   62 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 62 (if_part)


State 91

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 . _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    _SEMICOLON  shift, and go to state 95


State 92

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 . _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET

    _RPAREN  shift, and go to state 96


State 93

   56 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 56 (function_call)


State 94

   59 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 97
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52


State 95

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON . rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48

    num_exp        go to state 69
    exp            go to state 50
    literal        go to state 51
    function_call  go to state 52
    rel_exp        go to state 98


State 96

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN . _LBRACKET tranga_exp toerana_exp _RBRACKET

    _LBRACKET  shift, and go to state 99


State 97

   46 num_exp: num_exp . _AROP exp
   59 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 59 (argument)


State 98

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp . _SEMICOLON _PASO literal $@7 _RPAREN statement

    _SEMICOLON  shift, and go to state 100


State 99

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET . tranga_exp toerana_exp _RBRACKET

    _TRANGA  shift, and go to state 101

    tranga_exp  go to state 102


State 100

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON . _PASO literal $@7 _RPAREN statement

    _PASO  shift, and go to state 103


State 101

   33 tranga_exp: _TRANGA . jiro_literal $@5 _COLON statement break_exp

    _INT_NUMBER   shift, and go to state 104
    _UINT_NUMBER  shift, and go to state 105

    jiro_literal  go to state 106


State 102

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp . toerana_exp _RBRACKET
   34 tranga_exp: tranga_exp . _TRANGA jiro_literal _COLON statement break_exp

    _TRANGA   shift, and go to state 107
    _TOERANA  shift, and go to state 108

    $default  reduce using rule 37 (toerana_exp)

    toerana_exp  go to state 109


State 103

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO . literal $@7 _RPAREN statement

    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47

    literal  go to state 110


State 104

   35 jiro_literal: _INT_NUMBER .

    $default  reduce using rule 35 (jiro_literal)


State 105

   36 jiro_literal: _UINT_NUMBER .

    $default  reduce using rule 36 (jiro_literal)


State 106

   33 tranga_exp: _TRANGA jiro_literal . $@5 _COLON statement break_exp

    $default  reduce using rule 32 ($@5)

    $@5  go to state 111


State 107

   34 tranga_exp: tranga_exp _TRANGA . jiro_literal _COLON statement break_exp

    _INT_NUMBER   shift, and go to state 104
    _UINT_NUMBER  shift, and go to state 105

    jiro_literal  go to state 112


State 108

   38 toerana_exp: _TOERANA . _COLON statement

    _COLON  shift, and go to state 113


State 109

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp . _RBRACKET

    _RBRACKET  shift, and go to state 114


State 110

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal . $@7 _RPAREN statement

    $default  reduce using rule 40 ($@7)

    $@7  go to state 115


State 111

   33 tranga_exp: _TRANGA jiro_literal $@5 . _COLON statement break_exp

    _COLON  shift, and go to state 116


State 112

   34 tranga_exp: tranga_exp _TRANGA jiro_literal . _COLON statement break_exp

    _COLON  shift, and go to state 117


State 113

   38 toerana_exp: _TOERANA _COLON . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 118
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 114

   29 jiro_statement: _JIRO $@3 _LPAREN _ID $@4 _RPAREN _LBRACKET tranga_exp toerana_exp _RBRACKET .

    $default  reduce using rule 29 (jiro_statement)


State 115

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 119


State 116

   33 tranga_exp: _TRANGA jiro_literal $@5 _COLON . statement break_exp

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 120
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 117

   34 tranga_exp: tranga_exp _TRANGA jiro_literal _COLON . statement break_exp

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 121
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 118

   38 toerana_exp: _TOERANA _COLON statement .

    $default  reduce using rule 38 (toerana_exp)


State 119

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _PARA      shift, and go to state 32
    _JIRO      shift, and go to state 33

    statement             go to state 122
    jiro_statement        go to state 35
    para_statement        go to state 36
    postinc_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 120

   33 tranga_exp: _TRANGA jiro_literal $@5 _COLON statement . break_exp

    _BREAK  shift, and go to state 123

    $default  reduce using rule 30 (break_exp)

    break_exp  go to state 124


State 121

   34 tranga_exp: tranga_exp _TRANGA jiro_literal _COLON statement . break_exp

    _BREAK  shift, and go to state 123

    $default  reduce using rule 30 (break_exp)

    break_exp  go to state 125


State 122

   41 para_statement: _PARA _LPAREN _TYPE _ID $@6 _SEMICOLON rel_exp _SEMICOLON _PASO literal $@7 _RPAREN statement .

    $default  reduce using rule 41 (para_statement)


State 123

   31 break_exp: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 126


State 124

   33 tranga_exp: _TRANGA jiro_literal $@5 _COLON statement break_exp .

    $default  reduce using rule 33 (tranga_exp)


State 125

   34 tranga_exp: tranga_exp _TRANGA jiro_literal _COLON statement break_exp .

    $default  reduce using rule 34 (tranga_exp)


State 126

   31 break_exp: _BREAK _SEMICOLON .

    $default  reduce using rule 31 (break_exp)
